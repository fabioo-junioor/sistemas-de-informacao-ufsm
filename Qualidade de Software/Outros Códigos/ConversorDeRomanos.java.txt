package romanos;
import java.util.HashMap;
public class ConversorDeRomanos {
	
	//O uso principal da classe HashMap é quando queremos associar chaves e valores e,
	//posteriormente, recuperar valores baseados em suas chaves
	//terceiro momento
	/*private static HashMap<String, Integer> tabela = new HashMap<String,Integer>(){{
		put("I",1);
		put("V",5);
		put("X",10);
		put("L",50);
		put("C",100);
		put("D",500);
		put("M",1000);
	}};*/
	
	
	//quinto momento
	private static HashMap<Character, Integer> tabela = new HashMap<Character,Integer>(){{
		put('I',1);
		put('V',5);
		put('X',10);
		put('L',50);
		put('C',100);
		put('D',500);
		put('M',1000);
	}};	

	//Test Driven Development (TDD)
	//primeiro momento
	/**public int converte(String numeroRomano){
		return 1;
	}*/
	
	//segundo momento
	/**public int converte(String numeroRomano){
		if (numeroRomano.equals("I")) return 1;
		else if(numeroRomano.equals("V")) return 5;
		
		return 0;
	}*/
	
	//quarto momento
	/**public int converte(String numeroRomano){
		return tabela.get(numeroRomano);
	}*/
	
	//quinto momento (teste falha devido ao acumulador errado)
	/*public int converte(String numeroRomano){
		int acumulador = 0;
		for(int i=0; i < numeroRomano.length(); i++){
			acumulador += numeroRomano.charAt(i);
		}
		return acumulador;
			
	}*/
	
	//sexto momento  (funciona apenas para casos como XI, VI onde a ordem de precedencia 
	//do maior pro menor esta sendo atendida)
	/**	public int converte(String numeroRomano){
			int acumulador = 0;
			for(int i=0; i < numeroRomano.length(); i++){
				acumulador += tabela.get(numeroRomano.charAt(i));
			}
			return acumulador;
				
		}*/
	
	//sétimo momento e fim
			public int converte(String numeroRomano){
				int acumulador = 0;
				int ultimoVizinhoDaDireita=0;
				for(int i=numeroRomano.length()-1; i >=0; i--){
					int atual= tabela.get(numeroRomano.charAt(i));
					int multiplicador=1;
					
					if(atual < ultimoVizinhoDaDireita)
						multiplicador=-1;
					acumulador +=tabela.get(numeroRomano.charAt(i))*multiplicador;
					ultimoVizinhoDaDireita=atual;
				}
				return acumulador;
					
			}
		
	
}
